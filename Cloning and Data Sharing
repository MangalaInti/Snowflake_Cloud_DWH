Secure Data Sharing helps in sharing selected database objects from Snowflake account to other Snowflake accounts

The following database objects of Snowflake can be shared:
• Tables
• Secure materialized views
• Secure UDFs
• External tables
• Secure views
Snowflake enables the sharing of databases through shares, which are created by data providers and consumed by data consumers.

Provider Account - This is the Snowflake account that owns and shares data with other Snowflake accounts. 
The provider creates and manages the data.  We can share single or multiple databases with Grant Permission on the shared objects from 
the Database.
The provider is responsible for the storage costs of the shared data.

Consumer Account – A data consumer  be any (Either Snowflake or Non snowflake) that consume the share made by a data provider.
 Consumers can query and analyze the shared data for their specific needs. They typically have read-only access to the 
shared data and are responsible for the compute costs associated with querying that data within their own account.

It is also possible to share data with non-snowflake user, which is done by creating a reader account.
All compute cost of reader account are billed to provider account.

Reader Acount - Reader Account is meant for Non-Snowflake Data consumers who do not own any snowflake account.
                Reader accounts are created and maintained by data provider

Like Time Travel and cloning Snowflake Data sharing  is also a metadata operation. During data sharing, 
no data is moved or copied. Instead shares table and its micro-partition. That way any changes in the source table 
automatically mirrored in the shared table.
Secure data sharing can be done in three different ways.
1.	Direct Share
2.	Data Marketplace
3.	Data Exchange

DESCRIBE SHARE <share object> 
As a Data Cosumer account you can only query data. No re-share it to other accounts and updates to objects not possible
For data security and privacy reasons, only secure views are supported in shares

**Cloning**
Cloning or Zero Copy cloning is feature provided by snowflake that  users to clone - Table, Schema, DB & streams without physically copying the data.
1. Cloning doesn’t require  additional storage, because data is not copied.
2. Cloning operation is faster as it doesn’t copy the data
3. Once table is cloned from source table you perform DML operatio, then storge costs will incur
   Data that is changed in either table is maintained in new micro-partitions specific to that table
   However as new data is inserted or updates are performed to either table, micro-partitions may be added or removed. 
   If new micro-partitions are added, then additional storage costs are charged

4. Some objects in Snowflake contain child objects, such as a database containing schemas, which contain tables, which contain table stages:
   DB -> Schema -> Tables - Stages

When an object is cloned, its children will usually be cloned as well. The exceptions to this rule are:
External Tables
Internal Named Stages
5. 	Snowpipes -  That references an internal named stage are not cloned
6. Cloning is a metadata opertion -Cloned table is pointed to the exsiting micro-partition via metadata.
   It shares source table's micro-partition

Cloned - >Tables, Schemas & Databases can be cloned. Other objects that can be cloned include Stages, File Formats, Tasks, Sequences, and Streams.

Cannot be Cloned - > External Tables, Internal Named stages, Virtual warehouses & Share objects cannot be cloned
                    Snowpipes that point to a Named Internal Snowflake Stage



-Secure Views
You may create a secure view if you need to share data from many tables in separate databases. 
Because several databases cannot be added to a single share, Snowflake suggests creating secure views within a single database and sharing that database.

--Data Sharing
Data consumers cannot re-share database objects
Due to Data security requirements VPS does not support secure data sharing
 Any Snowflake account can consume or publish data to the Snowflake Marketplace.




